diff --recursive --unified --new-file a/src/c/include/zookeeper.h b/src/c/include/zookeeper.h
--- a/src/c/include/zookeeper.h	2013-10-22 21:06:55.000000000 -0600
+++ b/src/c/include/zookeeper.h	2013-10-22 21:25:47.390574064 -0600
@@ -1939,6 +1939,19 @@
         struct String_vector *strings, struct Stat *stat);
 
 /**
+ * \brief Flush leader channel.
+ *
+ * \param zh the zookeeper handle obtained by a call to \ref zookeeper_init
+ * \param path the name of the node. Expressed as a file name with slashes
+ * separating ancestors of the node.
+ * \return ZOK on success or one of the following errcodes on failure:
+ * ZBADARGUMENTS - invalid input parameters
+ * ZINVALIDSTATE - zhandle state is either ZOO_SESSION_EXPIRED_STATE or ZOO_AUTH_FAILED_STATE
+ * ZMARSHALLINGERROR - failed to marshall a request; possibly, out of memory
+ */
+ZOOAPI int zoo_sync(zhandle_t *zh, const char *path);
+
+/**
  * \brief gets the acl associated with a node synchronously.
  *
  * \param zh the zookeeper handle obtained by a call to \ref zookeeper_init
diff --recursive --unified --new-file a/src/c/src/zookeeper.c b/src/c/src/zookeeper.c
--- a/src/c/src/zookeeper.c	2013-10-22 21:06:55.000000000 -0600
+++ b/src/c/src/zookeeper.c	2013-10-22 21:25:47.394574070 -0600
@@ -4326,6 +4326,23 @@
     return zoo_wget_children2_(zh,path,watcher,watcherCtx,strings,stat);
 }
 
+int zoo_sync(zhandle_t *zh, const char *path)
+{
+    struct sync_completion *sc = alloc_sync_completion();
+    int rc;
+    if (!sc) {
+        return ZSYSTEMERROR;
+    }
+    rc = zoo_async(zh, path, SYNCHRONOUS_MARKER, sc);
+    if (rc == ZOK) {
+        wait_sync_completion(sc);
+        rc = sc->rc;
+    }
+    free_sync_completion(sc);
+
+    return rc;
+}
+
 int zoo_get_acl(zhandle_t *zh, const char *path, struct ACL_vector *acl,
         struct Stat *stat)
 {
