#!/bin/bash

set -u
set -e

# Make sure gpypi is installed
if ! which gpypi &>/dev/null; then
    echo "!! Please install gpypi !!"
    exit 1
fi

for pkg in $@; do
    
    # Run gpypi once to get the fully versioned ebuild name. Then run again to actually create the ebuild.
    name="$(gpypi echo "${pkg}" |& grep -Po '.*Generating ebuild: \K.*' | sed -e 's| |-|')"
    if [[ -z "${name}" ]]; then
        echo "!! Failed to find '${pkg}' on PyPi !!"
        exit 1
    fi

    # If the ebuild already exists return.
    ebuild="dev-python/${pkg}/${name,,}.ebuild"
    if [[ -s "${ebuild}" ]]; then
        echo "-- Existing ${ebuild}"
        continue
    fi

    # If category already exists, then it's known to gentoo. Instead try just copying highest numbered existing
    highest=$(ls dev-python/${pkg}/*.ebuild 2>/dev/null | sort --version-sort | tail -1 || true)
    if [[ -n "${highest}" && ! "${highest}" -ef "${ebuild}" ]]; then
        echo ">> Creating ${ebuild} (from ${highest})"
        cp "${highest}" "${ebuild}"
    else
        # Create directory structure then create ebuild vya gpypi. If the ebuild ends up being empty fail.
        echo ">> Creating ${ebuild} (via gpypi)"
        mkdir -p "dev-python/${pkg}"
        gpypi echo "${pkg}" \
            | sed -e 's|^SRC_URI=.*|SRC_URI="mirror://pypi/${P:0:1}/${PN}/${P}.tar.gz"|' \
                  -e 's|^PYTHON_COMPAT=.*|PYTHON_COMPAT=( python{2_7,3_5} )|' \
            > "${ebuild}"
    fi

    # Verify ebuild is non-zero
    if [[ ! -s "${ebuild}" ]]; then
        echo "!! Failed to create ${ebuild} !!"
        exit 1
    fi

    # Generate digest manifest
    if ! ebuild "${ebuild}" digest; then
        echo "!! Failed to create digest for ${ebuild} !!"
        exit 1
    fi

done
